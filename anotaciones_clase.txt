                                                                                              Segunda versi√≤n: 26/09/2022
_____________________________________________________________
Patr√≤n MVC (Doble encapsulamiento)

El patr√≤n modelo vista controlador es un tipo de dise√±o que separa en capas bien definidas el desarrollode una aplicaci√≤n

1- Modelo: Encargado de la l√≤gica de la aplicaci√≤n y la conexi√≤n con la base de datos.
2- Vista: Las responsables de mostrar al usuario los resultados que obtiene del modelo a trav√®s del controllador.
3- Controlador: Encargado de gestionar las petici√≤nes del usuario, procesarlas invocando al modelo y nuevamente mostrarlas
 al usuario a trav√®s de las vistas, es una segunda capa que valida la informaci√≤n que viene y v√† del servidor al usuario.

_______________________________________________________________
Pipeline (proceso o pasos) de un rpoyecto web

Pipeline de un proyecto web es el proceso paso a paso que se lleva a cabo para realizar un proyecto profesional de desarrollo
 web, para ello se tienen en cuenta tres fases principales:

Fase 1: Planeaci√≤n y dise√±o.
Fase 2: Desarrollo frontend
Fase 3: Desarrollo backend
               _______________________________________________________________________
_____________  ===!!!OjO Buscar en YouTube === https://tutorialesatualcance.com/cursos  
Fase 1 
    ¬∑Brief (Fase de investigacion, condiciones de partida, an√†lisis de necesidades, encuesta, entrevista, definici√≤n
                      de objetivos con el cliente).
    ¬∑Cotizaci√≥n
    ¬∑Coincepto (Definir la comunicaci√≤n visual que se desea transmitir desde el proyecto web).
    ¬∑Sitemap (Niveles de profundidad del sistema o desarrollo del proyecto web)
    ¬∑Wireframe (Esqueleto, estructura donde se ubica la estructura de los elementos visuales de ese desarrrollo)
    ¬∑Layouts (Acabado donde se mezclan colores, imagenes, tipograf√¨a acorde al concepto).

____________
Fase 2
     ¬∑Desarrollo de plantillas que se construyen en lenguahes del lado del cliente: HTML5, CSS3, JavaScript,
      JQuery(librer√¨a o plugins)), Boostrap4(Framework de dise√±o responsive CSS), Angular(Framework, conexi√≤n
      base de datos serv backend para JS), PHP...

____________
Fase 3  (Despu√®s de terminada el desarrollo de palntillas pasamos a la fase de desarrollo del lado del servidor y conexi√≤n a base de datos).
     ¬∑ Desarrollo del lado del servidor (php, MySQL, NodeJs, MongoDB, Laravel, Codelgniter e igualmente todo encapsulado en paradigma)

Fullstack es el que combina tanto la fase 2 como la fase 3. Ver cursos, UX, Boostrap, Angular, WordPress (para bases de datos)

CRUD Basico desde cero parte-1 10:31

__________________________________________________________________________________________
CONSTRUCCION DE UNA PLANTILLA HTML

//w3school de boostrap (ingreasr datos y enrrolarce)
//fontawesome (copiar link: -<script src="https://kit.fontawesome.com/e632f1f723.js" crossorigin="anonymous"></script>-)
//w3Layout.com se tiene plantillas gratuiras que se pueden emigrar al patr√≤n MVC (Tiene todo tipo de plantillas tem√°ticas / restaurante, arriendo, comercio, arriendo)OJO!!!

Qued√® en la 5  minuto 9:45

__________________________________________________________________________________________________
VARIABLES DE SESI√íN

session_star es una funci√≤n que le dice al navegador: voy a trabajar con variables de sesion, as√¨ que por favor tenmelas en cuenta.

OK toido...quedar√¨a habilitar un repositorio y colocar esto (limpiando antes comentarios) y ojal√† lo que aparezca de D,MININTana y actualizar curriculum... OJOO!!! PROXIMAMENTE (fin de semana), ...y estudiar: 
- Curso master en php comprado en udemy por mi usuario.
Laravel, ajax (php seguridad) codeIgniter4

__________________________________________________________________________________________________
SEGURIDAD INFORM√ÄTICA !!!Para evitar vurnerabilidad y exposici√≤n b√†sicas en una aplicaci√≤n.

Ataques inform√†ticos y modos de evitarlos o prevenirlos (recursos de protecci√≤n para disminuir vulnerabilidad); tipos de ataques de cada tipo:

- Ataque XSS conocido como (cross-site scripting)
    Es cuando se puede inyectar un script (c√≤digo js) en el output de una apicaci√≤n web de maenra que ejecuta en un navegador al validar
incorrectamente datos del usuario y e suelen inyectar mediante un formulario web o un enlace alterado. Introduciendo en el input de un formularioio
por ejemplo (donde se debe introducir un nombre y el usuario introduce un c√≥digo js)

   | Soluci√≤n a ataque XSS conocido como (cross-site scripting): 
        1- Usar unfunction.preg_match.php en laravel, son funciones que permiten comparar los caracteres que se est√†n escribiendo en las entradas input
con unos patrones o expresiones regulares, haciendo una validaci√≤n del lado del cliente, que se usan para c√≤digos y as√¨ evitsrlos no  permitiendolos pasar
por las entradas. Si se ejecutan es que no existe c√≤digo en las entradas,sino manda in error con una condicional if. Dar√† error con caracteres de <>/!"]}o
palabras claves en el input o de expresiones regulares, porque son para escribir c√≤digo, validar√† solamente nombres con letras regulares sin caracteres
esepciales.
        2- Nunca usar la etiqueta de cierre de php -?>- EHAAA!, si cierras la etiqueta se puede incluir c√≤digo de js despu√®s de tu archivo o l√¨nea
de cierre de php, dejala siempre abierta para que no permita trabajar otro tipo de lenguaje en ese documento.

- Ataque Cross-Site Request Forgeries CSRF
     Es cuando se provoca que el usuario ejecute una acci√≤n no intencionada en una aplicaci√≤n en la que inici√≤ sesi√≤n. Consiste en que el usuario al estar 
logueado en un sitio web tiene el riesgo al actualizar su perfil, o a√±adir objetos, o postear mensaje o cualquier acci√≤n de update...
Desde la consola del navegador web se puede introducir otro n√πmero id del input y alterar el dato a actualizar en la posici√≤n de la base de datos del
registro de la fila y ejecuta la opci√≤n para otro elemento que puede ser igualmente un delete.

    | Soluci√≤n a ataque Cross-Site Request Forgeries CSRF: 
          1- Token (con los famosos tokens!!!!!!!!!!!) elementos encriptados, puede ser el elemtno encriptado de cualquiera de los del registro o base de datos
del usuario, ej: el nombre, el correo, o alg√πn otro id o n√∫mero que no har√† mas que tomar esa cadena y por una funci√≤n unirla a otra nueva o sumar
nombre y correo (dos elementos y sumar esos dos datos) encryptados en una combinaci√≤n alfa num√®rica que sea necesario encryptar y desencryptar
por medio de la funci√≤n md5() de php que permite hacer encryptaciones.
Buscar en pagina w3school.com sobre php te permite y todo visualizar el resultado de salida de la encryptaci√≤n de un dato cualquiera y su retorno.
Ej: -"Fulanito P√©rez + fulanito@gmail.com";- en la entrada de una cadena me arrojar√† un token: 465fhunguj5465nklln567576nl3i9n6 y viceversa  y as√¨
guardo el dato en tabla y condiciono en la aplicaci√≤n que me tendr√¨a que coinsidir antes de hacer cualquier update en vase de datos.
Sin el token del c√≤digo no escribe en la base de dato, o actualiza, o borra nada...

5816888dd7ddfb4268671833f11d5c1a  es la encriptaci√≤n en md5 php de Yosmel Abreu + yosmelmalvarez@gmail.com; probar en el sitio: https://www.w3schools.com/PHP/phptryit.asp?filename=tryphp_func_string_md5

***Algunos de los frameworks de PHP m√°s conocidos son CodeIgniter, Symfony, Zend y, por supuesto, Laravel.

Se agreaga para evitar injeccion de c√≤digo, el archivo .htaccess!!:  Acceso a la aplicaci√≤n impidiendo acceder a las carpetas o archivos de los modelos
y los controlladores..!!! Solamente el sistema teniendo accdeso al index.php y nada mas mediante el archivo htcacces...

Options All -Indexes/ Se agrrega en el archivo esta l√¨nea de c√≤digo....||||!!!!!(significa indexar todos los directorios...s)significa que si quiero ingresar
a las carpoetas del mvc NO ME DEJAR√åA!!! ME DAR√åA ERROR 403!!!!< 

Me dar√† un FORBIDEN!!! LAWEAAAA!!! Ya no me permite acceder desde el navegador...|||||||||||||||

_____________________________________________________________________________________________
ATAQUE DE ROBOTS (fuerza bruta)

Limita la cantidad de intentos de logueo en el ingreso....as√¨ se evita el ü§ñ robot cl8ao¬™¬™!! o colocando un captcha! ej: el recaptcha de google... para 
incluirlo se necesita un dominio real en hosting 

O m√†s artesanal crear en cada usuario de la base de datos el registro de intentos fallidos ....(predeterminando siempre el valor nullo cada vez que se crea)

Se puede evitar con captcha o limitando las cantidades de posibilidad de veces de logearse en la aplicaci√≤n.

_______________________________________________________________________________________________
ENCRYPTAR CONTRASE√ëAS

En PHP existe una funci√≤n para encryptar contrase√±a llamada crypt que utiliza un hash de argumento de string
de est√†ndar unix y se agrega un par√†metro llamadao salt pars que combierta en un mod√®lo de encryptamiento a eso que queremos encryptar.

Los par√†metros salt son diferentes, existen un sinumero de ellos blowfish te permite utilizar 22 caracteres del alfabeto que desees...

Ejemplo de uso de funcion de encryptamiento salt tipo blowfish:


if (CRYPT_BLOWFISH == 1) { 
          echo 'Blowfish:    ' . crypt('rasmuslerdorf', '$2a$07$usesomesillystringforsalt$') . "\n";
}

Lo que har√¨amos es usar esta funci√≤n cuando se est√® registrando el usuario por primera vez y se env√¨a encryptada...con una variable que se llama encryptar password.

________________________________________________________________________________________
URLS AMIGABLES CON .HTACCES OCULTAR DIRECTORIOS Y OTRAS COSAS

URL  amigables en HTACCESS: 
   HTACCESS es un archivo de configuraci√≤n distribuida en formato AXIS similar al block de notas popularizado con el servidor http apache
   (el m√†s usado del mundo cuando hablamos de servidores web), permite definir diferentes directivas de configuraci√≤n para cada directorio
   con sus respectivos subdirectorios sin necesidad de archivo de configuraci√≤n principal del apache. Los archivos htacces sob usados frecuentemente
   parsa especificar restrivcciones de seguridad para directorios (en el ejemplo nuestro especifica restricciones de acceso a nuerstros directorios desde
    internos de nuestro sistema en el navegador). Los servidores igualmente suelen usar el htaccess para reescribir url largas y complejas en
   otras mas simples y facxilmente recordables (amigables), adem√†s permite bloquear a usuarios por direcci√≤nes ip, dominios, robots y ara√±as web.

   Convertir URL con variables get en URL amigable: 
   Se hace con el htacces....qued√® en minuto 6:06 cap√≠tulo url's amigables con .htacces

   Se debe uno asegurar que en el alojamiento, el m√≤dulo rewrite del hosting est√® activo para poder encender el motor de rescritura en el archivo
   htaccess con la linea de c√≤digo: -RewriteEngine On- Esto permite poder crear reglas de escrituras, con la linea de c√≤digo -RewriteRule- diciendo
   a continuaci√≤n  -^([-a-zA-Z0-9/]+)$- con esto le indicamos que lo tome como caracteres permitidos para colocar como url amigables. 
   De esta forma le dir√† que cuando encuentre en la ruta de escritura el index.php?pagina=$1 (me la reemplae por lo que coloque en el valor del href))
   ver el archivo .htaccess esa ultima l√¨nea se llama regla de reescritura para poder modificar en el men√π los href de la etiqueta li con las rutas de
   redirecionamiento, pudiendo cambiar donde antes dec√¨a: href="index.php?pagina=ingreso" ahora podr√® colocar href="registro" y el .htaccess asocia
   la palabra ingreso a $1 y asume la ruta index.php?pagina= (lo que contiene ahora $1) por lo que se puede ahora eliminar de la etiqueta listado <li>
   del c√≤digo html toda la parte de la cadena que conten√¨a: -"index.php?pagina="- y dejar solamente las palabras claves y .htaccess se ocupa del resto
   con el m√≤dulo RewriteEngine On y el m√≤dulo RewriteRule. 

Con m√†s de dos variables get noc se puede utilizar este especifica regla del .htaccess y ojo!! el nombre de la variable get utilizada en el href de la etiqueta del
html tiene que tener el mismo nombre que el codigo de la regla en la variable del nombre del .htacces!!!

Qued√® en el minuto 13:50 de capitulo url amigables...gracias y byeee!!! Hasta ahorita!!!

El archivo .htacces nos evita tambi√®n a ataques de robots ...con la regla: <Files .htaccess> order allow,deny  deny from all </Files>


#Reestringir accceso a los archivos desde el navegador
Options All -Indexes 

#Activar modulo Rewrite
RewriteEngine On
#Pauqte url amigable del modulo Rewrite
RewriteRule ^([-a-zA-Z0-9/]+)$ index.php?var_pagina=$1


# asegurando el archivo htaccess
<Files .htaccess>
order allow,deny
deny from all
</Files>

# denegar acceso a archivos de posibles ataques maliciosos extraxtores de webs y navegadores offline
RewriteBase /
RewriteCond %{HTTP_USER_AGENT} ^Anarrchie [OR]
RewriteCond %{HTTP_USER_AGENT} ^ASPSeek [OR]
RewriteCond %{HTTP_USER_AGENT} ^attach [OR]
RewriteCond %{HTTP_USER_AGENT} ^autoemailspider [OR]
RewriteCond %{HTTP_USER_AGENT} ^Xaldon\ WebSpider [OR]
RewriteCond %{HTTP_USER_AGENT} ^Xenu [OR]
RewriteCond %{HTTP_USER_AGENT} ^Xenu [OR]
RewriteCond %{HTTP_USER_AGENT} ^Zeus.*Webster [OR]
RewriteCond %{HTTP_USER_AGENT} ^Zeus [OR]
RewriteRule ^.* - [F,L]

*****Buscar en internet: usos y configuraciones que se le pueden dar a los archivos .htaccess !!!OJO pagina colocar en marcadores favoritos del navegador
 //bookmarks

-Trucos y ejemplos de configuraci√≤n del rchivo htaccess de apache
https://uniwebsidad.com/tutoriales/trucos-y-ejemplos-de-configuracion-del-archivo-htaccess-de-apache?from=librosweb

-Todo lo que tienes que saber sobre htaccess y algunos trucos extras
https://ayudawp.com/todo-sobre-htaccess/#Limitando_metodos_de_peticion_GET_yPUT_al_servidor

-C√≤mo crear URL amigables con .htaccess
https://www.emenia.es/como-crear-urls-amigables-con-htaccess/

-C√≤digos √πtiles .htaccess para sitios web
https://www.webempresa.com/blog/codigos-utiles-htaccess-para-wordpress.html

_____________________________________________________________________________________________
CERTIFICADO SSL (Secure Sockets Layers)

Protocolo de seguridad utilizado en internet. Los navegadores suelen indicar  que el sitio que est√†s visitando est√† asegurado con SSL/TSL Transfor
Layer Security un protocolo m√†s ampliom de seguridad similar a SSL del cual es sucesor (mediante un candado verde icono en la barra de directorio), 
y consiste SSL en encriptar los datos que se envian a un navegador, al principio solamente utilizado para cuentas bancarias y otra informaci√≤n
importante pero actualmente se usa en muchas m√†s situaciones incluyendo google que tiene en cuenta para el posicionamiento de los sitios web
si est√† usando el protocolo o est√† certificado con SSL o no...y son los dominios que tienen la S al final del dominio del protocolo http (https).

https://www.dominio.com  
Cuando tiene certificado SSL

http://www.dominio.com
Cuando no tiene certificado SSL

Sin encriptacion cualquier tipo de informaci√≤n enviada desde el servidor al navegador puede ser interceptada, pero con SSl es muy dificil acceder a los datos encrypytados.

Qued√® en el minuto 1:35 de capitulo Certificado SSL...           ...gracias y byeee!!! Hasta ahorita!!!



















 



